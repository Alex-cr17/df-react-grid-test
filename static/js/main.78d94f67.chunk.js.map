{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["SomeComponent","App","useState","setGridApi","setGridColumnApi","rowData","setRowData","className","widthGrid","heightGrid","addRowButton","allowExport","actionsComponent","onGridReady","params","api","columnApi","fetch","then","resp","json","data","slice","updateData","field","sortable","minWidth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAGMA,EAAgB,kBAAM,8CACb,SAASC,IAAO,IAAD,EACIC,mBAAS,MADb,mBACVC,GADU,aAEgBD,mBAAS,MAFzB,mBAEJE,GAFI,aAGIF,mBAAS,MAHb,mBAGnBG,EAHmB,KAGVC,EAHU,KAkB1B,OACI,qBAAKC,UAAU,MAAf,SACI,eAAC,IAAD,CACIF,QAASA,EACTG,UAAU,OACVC,WAAW,QACXC,cAAY,EACZC,aAAW,EACXC,iBAAkB,cAAC,EAAD,IAClBC,YAtBQ,SAACC,GACjBX,EAAWW,EAAOC,KAClBX,EAAiBU,EAAOE,WAMxBC,MAAM,+DACDC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GAAD,OANS,SAACA,GAChBf,EAAWe,EAAKC,MAAM,EAAG,MAKTC,CAAWF,OAK3B,UASI,cAAC,IAAD,CAAYG,MAAM,UAAUC,UAAQ,IACpC,cAAC,IAAD,CAAYD,MAAM,UAAUE,SAAU,MACtC,cAAC,IAAD,CAAYF,MAAM,QAClB,cAAC,IAAD,CAAYA,MAAM,SAClB,cAAC,IAAD,CAAYA,MAAM,OAAOE,SAAU,MACnC,cAAC,IAAD,CAAYF,MAAM,QAAQE,SAAU,MACpC,cAAC,IAAD,CAAYF,MAAM,SAClB,cAAC,IAAD,CAAYA,MAAM,WAClB,cAAC,IAAD,CAAYA,MAAM,WAClB,cAAC,IAAD,CAAYA,MAAM,eC1ClC,IAYeG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACpC,EAAD,MAEFqC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.78d94f67.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { HeroGrid, HeroColumn } from \"hero-react-grid\";\n\nconst SomeComponent = () => <div>I am a div</div>;\nexport default function App() {\n    const [gridApi, setGridApi] = useState(null);\n    const [gridColumnApi, setGridColumnApi] = useState(null);\n    const [rowData, setRowData] = useState(null);\n\n    const onGridReady = (params) => {\n        setGridApi(params.api);\n        setGridColumnApi(params.columnApi);\n\n        const updateData = (data) => {\n            setRowData(data.slice(0, 50000));\n        };\n\n        fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n            .then((resp) => resp.json())\n            .then((data) => updateData(data));\n    };\n\n    return (\n        <div className=\"App\">\n            <HeroGrid\n                rowData={rowData}\n                widthGrid=\"100%\"\n                heightGrid=\"400px\"\n                addRowButton\n                allowExport\n                actionsComponent={<SomeComponent />}\n                onGridReady={onGridReady}\n            >\n                <HeroColumn field=\"country\" sortable />\n                <HeroColumn field=\"athlete\" minWidth={180} />\n                <HeroColumn field=\"age\" />\n                <HeroColumn field=\"year\" />\n                <HeroColumn field=\"date\" minWidth={150} />\n                <HeroColumn field=\"sport\" minWidth={150} />\n                <HeroColumn field=\"gold\" />\n                <HeroColumn field=\"silver\" />\n                <HeroColumn field=\"bronze\" />\n                <HeroColumn field=\"total\" />\n            </HeroGrid>\n        </div>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}